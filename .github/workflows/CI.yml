name: CI

on:
  pull_request:

env:
  BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
  BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - NODE_ENV: test
          - NODE_ENV: production
    steps:
      - uses: actions/checkout@v2.3.4
      # Needed to be able to run `npm ci`. It fails if we try to install libraries from a github repo
      # e.g. "wpt": "git+https://github.com/Woopra/browser-tracker.git#v5.1.20",

      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules and dist
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: npm audit action
        if: matrix.NODE_ENV == 'production'
        uses: oke-py/npm-audit-action@v1.7.0
        with:
          audit_level: moderate

      - name: Build mock server
        if: matrix.NODE_ENV == 'test'
        run: npm run build:test

      - name: Run Tests
        if: matrix.NODE_ENV == 'test'
        run: |
          npm run test:ui
          npm run test:integration"

      - name: Run production build
        if: matrix.NODE_ENV == 'production'
        run: npm run build

      - name: Create Surge Subdomain - production
        if: matrix.NODE_ENV == 'production'
        run: echo "SURGE_SUBDOMAIN=release-${PR_NUMBER}-pr" >> $GITHUB_ENV

      - name: Create Surge URL - test
        if: matrix.NODE_ENV == 'test'
        run: echo "SURGE_SUBDOMAIN=${PR_NUMBER}-pr" >> $GITHUB_ENV

      - name: Create Surge Domain
        run: |
          IFS='/' read -ra REPO_SLUG_ARRAY <<< "$GITHUB_REPOSITORY"
          REPO_OWNER=${REPO_SLUG_ARRAY[0]}
          REPO_NAME=${REPO_SLUG_ARRAY[1]}
          echo "SURGE_DOMAIN=https://${SURGE_SUBDOMAIN}-${REPO_NAME}-${REPO_OWNER}.surge.sh" >> $GITHUB_ENV

      - name: Print Surge Domain
        run: |
          ls -la .
          echo "Deploying domain: $SURGE_DOMAIN"

      - name: Publish to surge
        uses: dswistowski/surge-sh-action@v1.0.1
        with:
          domain: ${{ env.SURGE_DOMAIN }}
          project: ./dist
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}

      - name: Add comment with Surge link to PR
        uses: mshick/add-pr-comment@v1
        with:
          message: ${{ env.SURGE_DOMAIN }} ðŸš€
          repo-token: ${{ secrets.GITHUB_TOKEN }}
