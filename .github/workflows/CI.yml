name: CI

on:
  pull_request:

env:
  BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
  BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - NODE_ENV: test
          - NODE_ENV: production
    steps:
      - uses: actions/checkout@v2.3.4
      # Needed to be able to run `npm ci`. It fails if we try to install libraries from a github repo
      # e.g. "wpt": "git+https://github.com/Woopra/browser-tracker.git#v5.1.20",
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm ci
      - name: npm audit action
        if: matrix.NODE_ENV == 'production'
        uses: oke-py/npm-audit-action@v1.7.0
        with:
          audit_level: moderate
      - name: Build mock server
        if: matrix.NODE_ENV == 'test'
        run: npm run build:test
      - name: Run UI Tests
        if: matrix.NODE_ENV == 'test'
        run: |
          npm run test:ui
          # npm run test:integration
      - name: Build mock server
        if: matrix.NODE_ENV == 'production'
        run: npm run build
      - name: Run BundleWatch Check
        if: matrix.NODE_ENV == 'production'
        uses: jackyef/bundlewatch-gh-action@0.1.0
        with:
          bundlewatch-github-token: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
      - name: Publish to surge
        if: matrix.NODE_ENV == 'test'
        uses: dswistowski/surge-sh-action@v1.0.1
        with:
          domain: 'stef-foo-bar.surge.sh'
          project: './dist/'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}
