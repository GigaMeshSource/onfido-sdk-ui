name: CI

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - NODE_ENV: test
          - NODE_ENV: production
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          # Match node version with .nvmrc
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # - name: Use Docker
      #   using: 'docker'
      #   image: 'Dockerfile'
      #   args:
      #     - ${{ inputs.who-to-greet }}
      # - name: Before Install
      #   run:
      #     tmpdaemon=$(mktemp)
      #     sudo jq '."registry-mirrors" += ["https://mirror.gcr.io"]' /etc/docker/daemon.json > $tmpdaemon
      #     sudo mv $tmpdaemon /etc/docker/daemon.json
      #     sudo systemctl daemon-reload
      #     sudo service docker restart
      #     chmod ugo+x ./test/scripts/setup_test_environment.sh
      #     sudo ./test/scripts/setup_test_environment.sh
      #     docker system info

      - name: Install Dependencies
        run: npm --production=false install
# script:
#   - if [ "${TRAVIS_PULL_REQUEST}" != "false" ] && [ "${NODE_ENV}" = "test" ]; then npm run mock-server:build; fi
#   - if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then audit-ci --moderate; fi
#   - npm run build
#   - chmod ugo+x ./test.sh
#   - ./test.sh
# after_success:
#   - python node_modules/travis-weigh-in/weigh_in.py dist/onfido.min.js
#   - chmod ugo+x ./deploy.sh
#   - ./deploy.sh

